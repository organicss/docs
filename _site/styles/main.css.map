{"version":3,"sources":["file:///Users/danielyuschick/Documents/Repos/Personal/organicss-docs/src/styles/_fonts.scss","%3Cinput%20css%20n1IOm3%3E","file:///Users/danielyuschick/Documents/Repos/Personal/organicss-docs/src/styles/_theme.scss","file:///Users/danielyuschick/Documents/Repos/Personal/organicss-docs/src/styles/_reset.scss","file:///Users/danielyuschick/Documents/Repos/Personal/organicss-docs/node_modules/@organicss/scss/_layout.scss","file:///Users/danielyuschick/Documents/Repos/Personal/organicss-docs/node_modules/@organicss/scss/_border.scss","file:///Users/danielyuschick/Documents/Repos/Personal/organicss-docs/src/styles/_global.scss","file:///Users/danielyuschick/Documents/Repos/Personal/organicss-docs/node_modules/@organicss/scss/_margin.scss","file:///Users/danielyuschick/Documents/Repos/Personal/organicss-docs/node_modules/@organicss/scss/_padding.scss","file:///Users/danielyuschick/Documents/Repos/Personal/organicss-docs/src/styles/_syntax_theme.scss"],"names":[],"mappings":"AAAA,WAOI,6BAAA,CAHA,iBAAA,CAHA,mBAAA,CACA,iBAAA,CACA,mBAAA,CAEA,qGCEJ,CDGA,WAMI,6BAAA,CAFA,iBAAA,CAHA,qBAAA,CACA,iBAAA,CACA,eAAA,CAEA,oDCAJ,CCfA,MACI,yBAAA,CACA,2BAAA,CACA,0BAAA,CAEA,gDAAA,CACA,oDAAA,CACA,mDAAA,CAEA,yBAAA,CACA,yBAAA,CACA,yBAAA,CACA,yBAAA,CACA,yBAAA,CACA,yBAAA,CACA,yBAAA,CACA,yBAAA,CACA,yBAAA,CACA,yBAAA,CAEA,qCAAA,CACA,mCAAA,CAEA,kBAAA,CACA,+CAAA,CACA,qCAAA,CACA,6CAAA,CACA,6CAAA,CACA,6CAAA,CACA,6CAAA,CACA,6CAAA,CACA,+CAAA,CACA,+CAAA,CACA,+CAAA,CAEA,2BAAA,CAEA,qBAAA,CACA,yDAAA,CAGA,8DAAA,CACA,6DAAA,CACA,0DAAA,CACA,4DAAA,CACA,6DAAA,CACA,4DAAA,CACA,6DAAA,CACA,6DDSJ,CEzDA,iBAGI,qBF4DJ,CEzDA,EACI,QAAA,CACA,SF4DJ,CEzDA,uCACI,EACI,0CAAA,CAAA,kCAAA,CACA,6CAAA,CAAA,qCAAA,CACA,8BAAA,CACA,mCF4DN,CACF,CEzDA,KACI,aAAA,CACA,0BF2DJ,CExDA,UAEI,iCAAA,CACA,4BAAA,CACA,iCAAA,CACA,sCF2DJ,CExDA,KAII,kCAAA,CACA,mCAAA,CCiBA,eDpB4B,CEK5B,gDFNwB,CAKxB,gBAAA,CAEA,6DAAA,CADA,oBF2DJ,CI5BI,2FFtCJ,KEyCQ,iDAAA,CAeA,8CJeN,CACF,CGWI,gCDnFJ,KCoFQ,WHRN,CACF,CElEA,wBACI,UFoEJ,CEjEA,8BACI,iCFoEJ,CElEA,8BACI,uCAAA,CAEA,uCAAA,CADA,iBFsEJ,CElEA,6BCFI,eDO4B,CAC5B,aAAA,CCJA,oBH0EJ,CGjBI,gCD3DJ,6BC4DQ,WHwBN,CACF,CGpBI,iCDjEJ,6BCkEQ,cH2BN,CACF,CErFA,IACI,mBAAA,CAAA,gBFuFJ,CEnFA,6BAII,YFsFJ,CEnFA,yBCnBI,2CD2BgC,CAChC,wBFsFJ,CGnDI,iCD5CJ,yBC6CQ,qCH6DN,CACF,CE/FA,kBAMI,eAAA,CACA,gBFiGJ,CE9FA,GACI,8BFiGJ,CE9FA,GACI,8BFiGJ,CE9FA,GACI,8BFiGJ,CE9FA,SAGI,8BFiGJ,CE9FA,IC/DI,eHiKJ,CGpGI,gCDEJ,ICDQ,WHuGN,CACF,CElGI,6BACI,YFoGR,CEjGI,iBACI,0BAAA,CACA,oBAAA,CACA,iBFmGR,CE/FA,2BACI,YFkGJ,CKzOA,KAMI,+BAAA,CADA,YAAA,CCmBA,kBDtByB,CFyDzB,2CE1DgC,CEsBhC,oCFpByB,CEqBzB,qCP0NJ,CGxHI,iCE1HJ,KF2HQ,qCH2HN,CACF,CM1MI,uED7CJ,KCgDQ,gBAAA,CACA,iBN2MN,CACF,COhNI,yEF7CJ,KEkDQ,qDPkNN,CACF,CK5PA,EACI,4BL8PJ,CK3PA,WDqDI,qDCpD8B,CAK9B,4BAAA,CACA,8BAAA,CACA,iBAAA,CCDA,kCDJyB,CF2CzB,8BE5CgC,CEKhC,qDP8PJ,CI3MI,2FC1DJ,WDkEQ,6CJuMN,CACF,CG7JI,iCE7GJ,WF8GQ,wBHgKN,CACF,CKpQA,KACI,4BLuQJ,CKnQA,SAHI,8BLiRJ,CK9QA,IAOI,2BAAA,CADA,yBAAA,CADA,kFAAA,CCXA,mCDQwB,CF4BxB,wDE7BgC,CAQhC,aAAA,CEfA,oCPoRJ,CGjLI,iCE7FJ,IF8FQ,kDHoLN,CACF,CMnQI,uEDhBJ,ICkBQ,oCAAA,CAGA,iCNmQN,CACF,COzQI,yEFhBJ,IEkBQ,qCAAA,CAGA,kCPyQN,CACF,CKnRA,GDUI,iDJ4QJ,CIxPI,2FC9BJ,GDiCQ,8CJyPN,CACF,CKvRA,GEfI,2BFiB+B,CDmB/B,qECpB8B,CEhB9B,0BP2SJ,CIlQI,2FC1BJ,GDkCQ,6DJ8PN,CACF,COjSI,yEFAJ,GEGQ,kBPkSN,CACF,CKjSA,eACI,eLmSJ,CKjSI,iBCzBA,yCN6TJ,CM5SI,uEDQA,iBCHI,iCN2SN,CACF,CKpSA,MFAI,wDHuSJ,CGvOI,iCEhEJ,MFmEQ,kDHwON,CACF,CKzSI,YACI,kCL2SR,CKxSI,SE7CA,YF8C+B,CFd3B,gBHyTR,CGpQQ,+BExCJ,SF2CY,eHqQd,CACF,CK5SI,SElDA,YPiWJ,CK1SQ,uBACI,iCL4SZ,CQxXA,6CAII,4BAAA,CACA,aAAA,CAcA,8BAAA,CALA,oBAAA,CAGA,YAAA,CAIA,mBAAA,CADA,eAAA,CAVA,eAAA,CACA,aAAA,CACA,UAAA,CLwCI,gBKlDwB,CAI5B,eAAA,CAEA,iBAAA,CADA,mBRqYJ,CGnSQ,+BKzGR,6CL4GgB,eHqSd,CACF,CQ1XA,sBACI,aR4XJ,CQzXA,0CAGI,4BR4XJ,CQjXA,gHAEI,4BR4XJ,CQzXA,kCAEI,4BR4XJ,CQzXA,iEAII,4BR4XJ,CQzWA,gNACI,4BR4XJ,CQzXA,WACI,8BAAA,CACA,yBR4XJ,CQzXA,gBACI,4BR4XJ,CQzXA,uFAEI,8BR4XJ,CQ9WA,8PACI,4BR4XJ","file":"to.css","sourcesContent":["@font-face {\n    font-family: 'Archivo';\n    font-style: normal;\n    font-weight: 300 700;\n    font-display: swap;\n    src: url('./fonts/archivo-variable.woff2') format('woff2'),\n        url('./fonts/archivo-variable.woff') format('woff');\n    font-named-instance: 'Regular';\n}\n\n@font-face {\n    font-family: 'Fira Mono';\n    font-style: normal;\n    font-weight: 400;\n    font-display: swap;\n    src: url('./fonts/fira-mono-regular.woff') format('woff');\n    font-named-instance: 'Regular';\n}\n","@font-face {\n  font-family: \"Archivo\";\n  font-style: normal;\n  font-weight: 300 700;\n  font-display: swap;\n  src: url(\"./fonts/archivo-variable.woff2\") format(\"woff2\"), url(\"./fonts/archivo-variable.woff\") format(\"woff\");\n  font-named-instance: \"Regular\";\n}\n@font-face {\n  font-family: \"Fira Mono\";\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(\"./fonts/fira-mono-regular.woff\") format(\"woff\");\n  font-named-instance: \"Regular\";\n}\n:root {\n  --o-color-primary: #a30034;\n  --o-color-secondary: #065760;\n  --o-color-tertiary: #f3b02b;\n  --o-color-surface-primary: var(--o-color-primary);\n  --o-color-surface-secondary: var(--o-color-secondary);\n  --o-color-surface-tertiary: var(--o-color-secondary);\n  --o-color-aux-100: #0a0a0a;\n  --o-color-aux-200: #292929;\n  --o-color-aux-300: #3d3d3d;\n  --o-color-aux-400: #5c5c5c;\n  --o-color-aux-500: #707070;\n  --o-color-aux-600: #8f8f8f;\n  --o-color-aux-700: #a3a3a3;\n  --o-color-aux-800: #c2c2c2;\n  --o-color-aux-900: #edede9;\n  --o-color-aux-950: #f9f9f8;\n  --o-font-primary: \"Archivo\", sans-serif;\n  --o-font-mono: \"Fira Mono\", monospace;\n  --o-space-base: 4px;\n  --o-space-base-half: calc(var(--o-space-base) / 2);\n  --o-space-base-1x: var(--o-space-base);\n  --o-space-base-2x: calc(var(--o-space-base) * 2);\n  --o-space-base-3x: calc(var(--o-space-base) * 3);\n  --o-space-base-4x: calc(var(--o-space-base) * 4);\n  --o-space-base-6x: calc(var(--o-space-base) * 6);\n  --o-space-base-8x: calc(var(--o-space-base) * 8);\n  --o-space-base-12x: calc(var(--o-space-base) * 12);\n  --o-space-base-16x: calc(var(--o-space-base) * 16);\n  --o-space-base-24x: calc(var(--o-space-base) * 24);\n  --o-max-content-length: 90ch;\n  --o-font-size-base: 18;\n  --o-font-size-base-unit: calc(var(--o-font-size-base) * 1px);\n  --o-font-size--2: clamp(0.69rem, calc(0.69rem + 0.04vw), 0.72rem);\n  --o-font-size--1: clamp(0.83rem, calc(0.81rem + 0.11vw), 0.9rem);\n  --o-font-size-0: clamp(1rem, calc(0.96rem + 0.21vw), 1.13rem);\n  --o-font-size-1: clamp(1.2rem, calc(1.13rem + 0.34vw), 1.41rem);\n  --o-font-size-2: clamp(1.44rem, calc(1.33rem + 0.53vw), 1.76rem);\n  --o-font-size-3: clamp(1.73rem, calc(1.57rem + 0.78vw), 2.2rem);\n  --o-font-size-4: clamp(2.07rem, calc(1.85rem + 1.12vw), 2.75rem);\n  --o-font-size-5: clamp(2.49rem, calc(2.17rem + 1.58vw), 3.43rem);\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    scroll-behavior: auto !important;\n    transition-duration: 0.01ms !important;\n  }\n}\nhtml {\n  direction: ltr;\n  writing-mode: horizontal-lr;\n}\n\nhtml,\nbody {\n  background: var(--o-color-aux-950);\n  color: var(--o-color-aux-100);\n  font-family: var(--o-font-primary);\n  font-size: var(--o-font-size-base-unit);\n}\n\nbody {\n  border-block: 1.5rem solid var(--o-color-primary);\n  block-size: 100%;\n  -webkit-font-smoothing: antialiased;\n  accent-color: var(--o-color-primary);\n  line-height: 1.65;\n  scrollbar-width: thin;\n  scrollbar-color: var(--o-color-primary) var(--o-color-aux-100);\n}\n@supports not (border-block-end: 1rem solid red) {\n  body {\n    border-bottom: 1.5rem solid var(--o-color-primary);\n    border-top: 1.5rem solid var(--o-color-primary);\n  }\n}\n@supports not (block-size: 1rem) {\n  body {\n    height: 100%;\n  }\n}\nbody::-webkit-scrollbar {\n  width: 10px;\n}\n\nbody::-webkit-scrollbar-track {\n  background: var(--o-color-aux-100);\n}\n\nbody::-webkit-scrollbar-thumb {\n  background-color: var(--o-color-primary);\n  border-radius: 6px;\n  border: 3px solid var(--o-color-aux-100);\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  block-size: auto;\n  max-inline-size: 100%;\n  display: block;\n}\n@supports not (block-size: 1rem) {\n  img,\npicture,\nvideo,\ncanvas,\nsvg {\n    height: auto;\n  }\n}\n@supports not (inline-size: 1rem) {\n  img,\npicture,\nvideo,\ncanvas,\nsvg {\n    max-width: 100%;\n  }\n}\nimg {\n  object-fit: cover;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\nspan,\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  max-inline-size: var(--o-max-content-length);\n  overflow-wrap: break-word;\n}\n@supports not (inline-size: 1rem) {\n  span,\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    max-width: var(--o-max-content-length);\n  }\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: 400;\n  line-height: 1.25;\n}\n\nh1 {\n  font-size: var(--o-font-size-5);\n}\n\nh2 {\n  font-size: var(--o-font-size-3);\n}\n\nh3 {\n  font-size: var(--o-font-size-2);\n}\n\nh4,\nh5,\nh6 {\n  font-size: var(--o-font-size-1);\n}\n\nsvg {\n  block-size: 1rem;\n}\n@supports not (block-size: 1rem) {\n  svg {\n    height: 1rem;\n  }\n}\n* :focus:not(:focus-visible) {\n  outline: none;\n}\n* :focus-visible {\n  outline-color: currentColor;\n  outline-offset: 0.15em;\n  outline-width: 2px;\n}\n\n*:focus:not(:focus-visible) {\n  outline: none;\n}\n\nmain {\n  max-inline-size: var(--o-max-content-length);\n  margin-inline: auto;\n  padding-block: var(--o-space-base-8x);\n  padding-inline: var(--o-space-base-6x);\n  display: grid;\n  grid-gap: var(--o-space-base-6x);\n}\n@supports not (inline-size: 1rem) {\n  main {\n    max-width: var(--o-max-content-length);\n  }\n}\n@supports not (margin-block-end: 1rem) {\n  main {\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n@supports not (padding-block-end: 1rem) {\n  main {\n    padding-bottom: var(--o-space-base-8x);\n    padding-left: var(--o-space-base-6x);\n    padding-right: var(--o-space-base-6x);\n    padding-top: var(--o-space-base-8x);\n  }\n}\na {\n  color: var(--o-color-primary);\n}\n\nblockquote {\n  border-inline-start: 3px solid var(--o-color-tertiary);\n  max-inline-size: min(670px, 80%);\n  margin: var(--o-space-base-4x) auto;\n  padding: var(--o-space-base-4x) var(--o-space-base-6x);\n  color: var(--o-color-aux-200);\n  font-size: var(--o-font-size-1);\n  font-style: italic;\n}\n@supports not (border-block-end: 1rem solid red) {\n  blockquote {\n    border-left: 3px solid var(--o-color-tertiary);\n  }\n}\n@supports not (inline-size: 1rem) {\n  blockquote {\n    max-width: min(670px, 80%);\n  }\n}\ncode {\n  color: var(--o-color-aux-100);\n  font-family: var(--o-font-mono);\n}\n\npre {\n  max-inline-size: calc(100vw - var(--o-space-base-6x) * 2.5);\n  margin-block: var(--o-space-base-6x);\n  padding-block: var(--o-space-base-6x);\n  border-image-source: linear-gradient(var(--o-color-aux-900), var(--o-color-aux-900));\n  border-image-slice: 0 fill;\n  border-image-outset: 0 100vw;\n  font-family: var(--o-font-mono);\n  overflow: auto;\n}\n@supports not (inline-size: 1rem) {\n  pre {\n    max-width: calc(100vw - var(--o-space-base-6x) * 2.5);\n  }\n}\n@supports not (margin-block-end: 1rem) {\n  pre {\n    margin-bottom: var(--o-space-base-6x);\n    margin-top: var(--o-space-base-6x);\n  }\n}\n@supports not (padding-block-end: 1rem) {\n  pre {\n    padding-bottom: var(--o-space-base-6x);\n    padding-top: var(--o-space-base-6x);\n  }\n}\nh2 {\n  border-block-end: 3px solid var(--o-color-primary);\n}\n@supports not (border-block-end: 1rem solid red) {\n  h2 {\n    border-bottom: 3px solid var(--o-color-primary);\n  }\n}\n\nh3 {\n  border-inline-start: var(--o-font-size-2) solid var(--o-color-primary);\n  padding-inline-start: 0.5rem;\n}\n@supports not (border-block-end: 1rem solid red) {\n  h3 {\n    border-left: var(--o-font-size-2) solid var(--o-color-primary);\n  }\n}\n@supports not (padding-block-end: 1rem) {\n  h3 {\n    padding-left: 0.5rem;\n  }\n}\n.table-wrapper {\n  overflow-x: auto;\n}\n.table-wrapper + * {\n  margin-block-start: var(--o-space-base-6x);\n}\n@supports not (margin-block-end: 1rem) {\n  .table-wrapper + * {\n    margin-top: var(--o-space-base-6x);\n  }\n}\ntable {\n  inline-size: max(100%, var(--o-max-content-length) - 10ch);\n}\n@supports not (inline-size: 1rem) {\n  table {\n    width: max(100%, var(--o-max-content-length) - 10ch);\n  }\n}\ntable thead {\n  background: var(--o-color-tertiary);\n}\ntable th {\n  padding: 0.5em;\n  text-align: start;\n}\n@supports not (text-align: end) {\n  table th {\n    text-align: left;\n  }\n}\ntable td {\n  padding: 0.5em;\n}\ntable tr:nth-child(even) {\n  background: var(--o-color-aux-900);\n}\n\ncode[class*=language-],\npre[class*=language-] {\n  text-align: start;\n  color: var(--o-color-aux-100);\n  direction: ltr;\n  white-space: pre;\n  word-spacing: normal;\n  word-break: normal;\n  -moz-tab-size: 4;\n  -o-tab-size: 4;\n  tab-size: 4;\n  -webkit-hyphens: none;\n  -moz-hyphens: none;\n  -ms-hyphens: none;\n  hyphens: none;\n  font-family: var(--o-font-mono);\n  line-height: 1.5;\n  letter-spacing: 0.5px;\n}\n@supports not (text-align: end) {\n  code[class*=language-],\npre[class*=language-] {\n    text-align: left;\n  }\n}\npre[class*=language-] {\n  overflow: auto;\n}\n\n.token.comment,\n.token.prolog,\n.token.cdata {\n  color: var(--o-color-aux-300);\n}\n\n.token.delimiter,\n.token.keyword,\n.token.selector,\n.token.important,\n.token.atrule {\n  color: var(--o-color-primary);\n}\n\n.token.operator,\n.token.attr-name {\n  color: var(--o-color-primary);\n}\n\n.token.punctuation,\n.token.boolean {\n  color: var(--o-color-aux-100);\n}\n\n.token.tag,\n.token.tag .punctuation,\n.token.doctype,\n.token.builtin {\n  color: var(--o-color-primary);\n}\n\n.token.entity,\n.token.symbol,\n.token.number,\n.token.property,\n.token.constant,\n.token.variable {\n  color: var(--o-color-aux-200);\n}\n\n.token.string,\n.token.char,\n.token.attr-value,\n.token.attr-value .punctuation {\n  color: var(--o-color-aux-200);\n}\n\n.token.attr-value .punctuation:first-child {\n  color: var(--o-color-aux-200);\n}\n\n.token.url {\n  color: var(--o-color-secondary);\n  text-decoration: underline;\n}\n\n.token.function {\n  color: var(--o-color-primary);\n}\n\ncode.language-css .token.property,\ncode.language-css .token.property + .token.punctuation {\n  color: var(--o-color-secondary);\n}\n\ncode.language-css .token.id {\n  color: var(--o-color-primary);\n}\n\ncode.language-css .token.selector > .token.class,\ncode.language-css .token.selector > .token.attribute,\ncode.language-css .token.selector > .token.pseudo-class,\ncode.language-css .token.selector > .token.pseudo-element {\n  color: var(--o-color-primary);\n}\n\n.token.class-name {\n  color: var(--o-color-primary);\n}",":root {\n    --o-color-primary: #a30034;\n    --o-color-secondary: #065760;\n    --o-color-tertiary: #f3b02b;\n\n    --o-color-surface-primary: var(--o-color-primary);\n    --o-color-surface-secondary: var(--o-color-secondary);\n    --o-color-surface-tertiary: var(--o-color-secondary);\n\n    --o-color-aux-100: #0a0a0a;\n    --o-color-aux-200: #292929;\n    --o-color-aux-300: #3d3d3d;\n    --o-color-aux-400: #5c5c5c;\n    --o-color-aux-500: #707070;\n    --o-color-aux-600: #8f8f8f;\n    --o-color-aux-700: #a3a3a3;\n    --o-color-aux-800: #c2c2c2;\n    --o-color-aux-900: #edede9;\n    --o-color-aux-950: #f9f9f8;\n\n    --o-font-primary: 'Archivo', sans-serif;\n    --o-font-mono: 'Fira Mono', monospace;\n\n    --o-space-base: 4px;\n    --o-space-base-half: calc(var(--o-space-base) / 2);\n    --o-space-base-1x: var(--o-space-base);\n    --o-space-base-2x: calc(var(--o-space-base) * 2);\n    --o-space-base-3x: calc(var(--o-space-base) * 3);\n    --o-space-base-4x: calc(var(--o-space-base) * 4);\n    --o-space-base-6x: calc(var(--o-space-base) * 6);\n    --o-space-base-8x: calc(var(--o-space-base) * 8);\n    --o-space-base-12x: calc(var(--o-space-base) * 12);\n    --o-space-base-16x: calc(var(--o-space-base) * 16);\n    --o-space-base-24x: calc(var(--o-space-base) * 24);\n\n    --o-max-content-length: 90ch;\n\n    --o-font-size-base: 18;\n    --o-font-size-base-unit: calc(var(--o-font-size-base) * 1px);\n\n    // https://utopia.fyi/type/calculator?c=320,16,1.2,1280,18,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l\n    --o-font-size--2: clamp(0.69rem, calc(0.69rem + 0.04vw), 0.72rem);\n    --o-font-size--1: clamp(0.83rem, calc(0.81rem + 0.11vw), 0.9rem);\n    --o-font-size-0: clamp(1rem, calc(0.96rem + 0.21vw), 1.13rem);\n    --o-font-size-1: clamp(1.2rem, calc(1.13rem + 0.34vw), 1.41rem);\n    --o-font-size-2: clamp(1.44rem, calc(1.33rem + 0.53vw), 1.76rem);\n    --o-font-size-3: clamp(1.73rem, calc(1.57rem + 0.78vw), 2.2rem);\n    --o-font-size-4: clamp(2.07rem, calc(1.85rem + 1.12vw), 2.75rem);\n    --o-font-size-5: clamp(2.49rem, calc(2.17rem + 1.58vw), 3.43rem);\n}\n","*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\n@media (prefers-reduced-motion: reduce) {\n    * {\n        animation-duration: 0.01ms !important;\n        animation-iteration-count: 1 !important;\n        scroll-behavior: auto !important;\n        transition-duration: 0.01ms !important;\n    }\n}\n\nhtml {\n    direction: ltr;\n    writing-mode: horizontal-lr;\n}\n\nhtml,\nbody {\n    background: var(--o-color-aux-950);\n    color: var(--o-color-aux-100);\n    font-family: var(--o-font-primary);\n    font-size: var(--o-font-size-base-unit);\n}\n\nbody {\n    @include border($block: 1.5rem solid var(--o-color-primary));\n    @include layout($blockSize: 100%);\n\n    -webkit-font-smoothing: antialiased;\n    accent-color: var(--o-color-primary);\n    line-height: 1.65;\n    scrollbar-width: thin;\n    scrollbar-color: var(--o-color-primary) var(--o-color-aux-100);\n}\n\nbody::-webkit-scrollbar {\n    width: 10px;\n}\n\nbody::-webkit-scrollbar-track {\n    background: var(--o-color-aux-100);\n}\nbody::-webkit-scrollbar-thumb {\n    background-color: var(--o-color-primary);\n    border-radius: 6px;\n    border: 3px solid var(--o-color-aux-100);\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n    @include layout($blockSize: auto, $maxInlineSize: 100%);\n    display: block;\n}\n\nimg {\n    object-fit: cover;\n    // Defensive CSS best practice: https://ishadeed.com/article/defensive-css/#prevent-an-image-from-being-stretched-or-compressed\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n    font: inherit;\n}\n\nspan,\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    @include layout($maxInlineSize: var(--o-max-content-length));\n    overflow-wrap: break-word;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    font-weight: 400;\n    line-height: 1.25;\n}\n\nh1 {\n    font-size: var(--o-font-size-5);\n}\n\nh2 {\n    font-size: var(--o-font-size-3);\n}\n\nh3 {\n    font-size: var(--o-font-size-2);\n}\n\nh4,\nh5,\nh6 {\n    font-size: var(--o-font-size-1);\n}\n\nsvg {\n    @include layout($blockSize: 1rem);\n}\n\n* {\n    :focus:not(:focus-visible) {\n        outline: none;\n    }\n\n    :focus-visible {\n        outline-color: currentColor;\n        outline-offset: 0.15em;\n        outline-width: 2px;\n    }\n}\n\n*:focus:not(:focus-visible) {\n    outline: none;\n}\n","@use 'sass:map';\n\n@import './utils/maps';\n\n// All props are optional and default to null\n@mixin layout(\n    $blockSize: null,\n    $captionSide: null,\n    $clear: null,\n    $inlineSize: null,\n    $maxBlockSize: null,\n    $maxInlineSize: null,\n    $minBlockSize: null,\n    $minInlineSize: null,\n    $overflow: null,\n    $overflowBlock: null,\n    $overflowInline: null,\n    $overscrollBehavior: null,\n    $overscrollBehaviorBlock: null,\n    $overscrollBehaviorInline: null,\n    $resize: null,\n    $textAlign: null\n) {\n    // If $captionSide is a directional value, map it to use its logical equivalent\n    @if $captionSide == top or $captionSide == bottom {\n        caption-side: map.get($logicalMap, $captionSide);\n    } @else {\n        // Else use the raw $captionSide value\n        caption-side: $captionSide;\n    }\n\n    // If $clear is a directional value, map it to use its logical equivalent\n    @if $clear == left or $clear == right {\n        clear: map.get($logicalMap, $clear);\n    } @else {\n        // Else use the raw $clear value\n        clear: $clear;\n    }\n\n    // If $resize is a directional value, map it to use its logical equivalent\n    @if $resize == vertical or $resize == horizontal {\n        resize: map.get($logicalMap, $resize);\n    } @else {\n        // Else use the raw $resize value\n        resize: $resize;\n    }\n\n    // If $textAlign is a directional value, map it to use its logical equivalent\n    @if $textAlign == left or $textAlign == right {\n        text-align: map.get($alignmentMap, $textAlign);\n    } @else {\n        // Else use the raw $textAlign value\n        text-align: $textAlign;\n    }\n\n    block-size: $blockSize;\n    max-block-size: $maxBlockSize;\n    min-block-size: $minBlockSize;\n    inline-size: $inlineSize;\n    max-inline-size: $maxInlineSize;\n    min-inline-size: $minInlineSize;\n    overflow: $overflow;\n    overflow-block: $overflowBlock;\n    overflow-inline: $overflowInline;\n    overscroll-behavior: $overscrollBehavior;\n    overscroll-behavior-block: $overscrollBehaviorBlock;\n    overscroll-behavior-inline: $overscrollBehaviorInline;\n\n    @if map.get($logicalMap, $captionSide) {\n        @supports not (caption-side: block-end) {\n            // If $captionSide is a logical value, map it to its directional value fallback\n            @if $captionSide == block-start or $captionSide == block-end {\n                caption-side: map.get($logicalMap, $captionSide);\n            } @else {\n                // Else use the raw $captionSide value\n                caption-side: $captionSide;\n            }\n        }\n    }\n\n    @if map.get($logicalMap, $clear) {\n        @supports not (clear: inline-end) {\n            // If $clear is a logical value, map it to its directional value fallback\n            @if $clear == inline-start or $clear == inline-end {\n                clear: map.get($logicalMap, $clear);\n            } @else {\n                // Else use the raw $clear value\n                clear: $clear;\n            }\n        }\n    }\n\n    @if map.get($logicalMap, $resize) {\n        @supports not (resize: block) {\n            // If $resize is a logical value, map it to its directional value fallback\n            @if $resize == block or $resize == inline {\n                resize: map.get($logicalMap, $resize);\n            } @else {\n                // Else use the raw $resize value\n                resize: $resize;\n            }\n        }\n    }\n\n    @if map.get($alignmentMap, $textAlign) {\n        @supports not (text-align: end) {\n            // If $textAlign is a logical value, map it to its directional value fallback\n            @if $textAlign == start or $textAlign == end {\n                text-align: map.get($alignmentMap, $textAlign);\n            } @else {\n                // Else use the raw $textAlign value\n                text-align: $textAlign;\n            }\n        }\n    }\n\n    @supports not (block-size: 1rem) {\n        height: $blockSize;\n        max-height: $maxBlockSize;\n        min-height: $minBlockSize;\n    }\n\n    @supports not (inline-size: 1rem) {\n        max-width: $maxInlineSize;\n        min-width: $minInlineSize;\n        width: $inlineSize;\n    }\n\n    @supports not (overflow-block: auto) {\n        overflow-x: $overflowInline;\n        overflow-y: $overflowBlock;\n    }\n\n    @supports not (overscroll-behavior-block: auto) {\n        overscroll-behavior-x: $overscrollBehaviorInline;\n        overscroll-behavior-y: $overscrollBehaviorBlock;\n    }\n}\n","@use 'sass:list';\n\n// All props are optional and default to null\n@mixin border(\n    $border: null,\n    $borderColor: null,\n    $borderStyle: null,\n    $borderWidth: null,\n    $block: null,\n    $blockColor: null,\n    $blockStyle: null,\n    $blockWidth: null,\n    $blockEnd: null,\n    $blockEndColor: null,\n    $blockEndStyle: null,\n    $blockEndWidth: null,\n    $blockStart: null,\n    $blockStartColor: null,\n    $blockStartStyle: null,\n    $blockStartWidth: null,\n    $inline: null,\n    $inlineColor: null,\n    $inlineStyle: null,\n    $inlineWidth: null,\n    $inlineEnd: null,\n    $inlineEndColor: null,\n    $inlineEndStyle: null,\n    $inlineEndWidth: null,\n    $inlineStart: null,\n    $inlineStartColor: null,\n    $inlineStartStyle: null,\n    $inlineStartWidth: null\n) {\n    // General value that apply to more than one side\n    border: $border;\n    border-color: $borderColor;\n    border-style: $borderStyle;\n    border-width: $borderWidth;\n\n    // Axis specific values to apply to two sides\n    border-block: $block;\n    border-block-color: $blockColor;\n    border-block-style: $blockStyle;\n    border-block-width: $blockWidth;\n\n    border-inline: $inline;\n    border-inline-color: $inlineColor;\n    border-inline-style: $inlineStyle;\n    border-inline-width: $inlineWidth;\n\n    // Side specific values to overwrite any general or axis values\n    border-block-end: $blockEnd;\n    border-block-end-color: $blockEndColor;\n    border-block-end-style: $blockEndStyle;\n    border-block-end-width: $blockEndWidth;\n\n    border-block-start: $blockStart;\n    border-block-start-color: $blockStartColor;\n    border-block-start-style: $blockStartStyle;\n    border-block-start-width: $blockStartWidth;\n\n    border-inline-end: $inlineEnd;\n    border-inline-end-color: $inlineEndColor;\n    border-inline-end-style: $inlineEndStyle;\n    border-inline-end-width: $inlineEndWidth;\n\n    border-inline-start: $inlineStart;\n    border-inline-start-color: $inlineStartColor;\n    border-inline-start-style: $inlineStartStyle;\n    border-inline-start-width: $inlineStartWidth;\n\n    @supports not (border-block-end: 1rem solid red) {\n        // The properties block/inline do not accept lists, so they are used as the side specific fallback\n        // However, block/inline-color/style/width do accept lists so .nth is used to map the sides\n        border-bottom: $blockEnd or $block;\n        border-bottom-color: $blockEndColor or list.nth($blockColor, -1);\n        border-bottom-style: $blockEndStyle or list.nth($blockStyle, -1);\n        border-bottom-width: $blockEndWidth or list.nth($blockWidth, -1);\n\n        border-left: $inlineStart or $inline;\n        border-left-color: $inlineStartColor or list.nth($inlineColor, 1);\n        border-left-style: $inlineStartStyle or list.nth($inlineStyle, 1);\n        border-left-width: $inlineStartWidth or list.nth($inlineWidth, 1);\n\n        border-right: $inlineEnd or $inline;\n        border-right-color: $inlineEndColor or list.nth($inlineColor, -1);\n        border-right-style: $inlineEndStyle or list.nth($inlineStyle, -1);\n        border-right-width: $inlineEndWidth or list.nth($inlineWidth, -1);\n\n        border-top: $blockStart or $block;\n        border-top-color: $blockStartColor or list.nth($blockColor, 1);\n        border-top-style: $blockStartStyle or list.nth($blockStyle, 1);\n        border-top-width: $blockStartWidth or list.nth($blockWidth, 1);\n    }\n}\n","main {\n    @include layout($maxInlineSize: var(--o-max-content-length));\n    @include margin($inline: auto);\n    @include padding($block: var(--o-space-base-8x), $inline: var(--o-space-base-6x));\n\n    display: grid;\n    grid-gap: var(--o-space-base-6x);\n}\n\na {\n    color: var(--o-color-primary);\n}\n\nblockquote {\n    @include border($inlineStart: 3px solid var(--o-color-tertiary));\n    @include layout($maxInlineSize: min(670px, 80%));\n    @include margin($margin: var(--o-space-base-4x) auto);\n    @include padding($padding: var(--o-space-base-4x) var(--o-space-base-6x));\n\n    color: var(--o-color-aux-200);\n    font-size: var(--o-font-size-1);\n    font-style: italic;\n}\n\ncode {\n    color: var(--o-color-aux-100);\n    font-family: var(--o-font-mono);\n}\n\npre {\n    @include layout($maxInlineSize: calc(100vw - var(--o-space-base-6x) * 2.5));\n    @include margin($block: var(--o-space-base-6x));\n    @include padding($block: var(--o-space-base-6x));\n\n    border-image-source: linear-gradient(var(--o-color-aux-900), var(--o-color-aux-900));\n    border-image-slice: 0 fill;\n    border-image-outset: 0 100vw;\n    font-family: var(--o-font-mono);\n    overflow: auto;\n}\n\nh2 {\n    @include border($blockEnd: 3px solid var(--o-color-primary));\n}\n\nh3 {\n    @include border($inlineStart: var(--o-font-size-2) solid var(--o-color-primary));\n    @include padding($inlineStart: 0.5rem);\n}\n\n.table-wrapper {\n    overflow-x: auto;\n\n    + * {\n        @include margin($blockStart: var(--o-space-base-6x));\n    }\n}\n\ntable {\n    @include layout($inlineSize: max(100%, calc(var(--o-max-content-length) - 10ch)));\n\n    thead {\n        background: var(--o-color-tertiary);\n    }\n\n    th {\n        @include padding($padding: 0.5em);\n        @include layout($textAlign: start);\n    }\n\n    td {\n        @include padding($padding: 0.5em);\n    }\n\n    tr {\n        &:nth-child(even) {\n            background: var(--o-color-aux-900);\n        }\n    }\n}\n","@use 'sass:list';\n\n// All props are optional and default to null\n@mixin margin(\n    $block: null,\n    $blockEnd: null,\n    $blockStart: null,\n    $inline: null,\n    $inlineEnd: null,\n    $inlineStart: null,\n    $margin: null,\n    $scroll: null,\n    $scrollBlock: null,\n    $scrollBlockEnd: null,\n    $scrollBlockStart: null,\n    $scrollInline: null,\n    $scrollInlineEnd: null,\n    $scrollInlineStart: null\n) {\n    // General value that apply to more than one side\n    margin: $margin;\n\n    // Axis specific values to apply to two sides\n    margin-block: $block;\n    margin-inline: $inline;\n\n    // Side specific values to overwrite any general or axis values\n    margin-block-end: $blockEnd;\n    margin-block-start: $blockStart;\n    margin-inline-end: $inlineEnd;\n    margin-inline-start: $inlineStart;\n\n    // General scroll values that apply to more than one side\n    scroll-margin: $scroll;\n\n    // Axis specific values to apply to two sides\n    scroll-margin-block: $scrollBlock;\n    scroll-margin-inline: $scrollInline;\n\n    // Side specific scroll values to overwrite any general or axis values\n    scroll-margin-block-end: $scrollBlockEnd;\n    scroll-margin-block-start: $scrollBlockStart;\n    scroll-margin-inline-end: $scrollInlineEnd;\n    scroll-margin-inline-start: $scrollInlineStart;\n\n    @supports not (margin-block-end: 1rem) {\n        // Side-specific fallbacks or axis-specific fallbacks\n        margin-bottom: $blockEnd or list.nth($block, -1);\n        margin-left: $inlineStart or list.nth($inline, 1);\n        margin-right: $inlineEnd or list.nth($inline, -1);\n        margin-top: $blockStart or list.nth($block, 1);\n    }\n\n    @supports not (scroll-margin-block: 1rem) {\n        // Side-specific fallbacks or axis-specific fallbacks\n        scroll-margin-bottom: $scrollBlockEnd or list.nth($scrollBlock, -1);\n        scroll-margin-left: $scrollInlineStart or list.nth($scrollInline, 1);\n        scroll-margin-right: $scrollInlineEnd or list.nth($scrollInline, -1);\n        scroll-margin-top: $scrollBlockStart or list.nth($scrollBlock, 1);\n    }\n}\n","@use 'sass:list';\n\n// All props are optional and default to null\n@mixin padding(\n    $block: null,\n    $blockEnd: null,\n    $blockStart: null,\n    $inline: null,\n    $inlineEnd: null,\n    $inlineStart: null,\n    $padding: null,\n    $scroll: null,\n    $scrollBlock: null,\n    $scrollBlockEnd: null,\n    $scrollBlockStart: null,\n    $scrollInline: null,\n    $scrollInlineEnd: null,\n    $scrollInlineStart: null\n) {\n    // General value that apply to more than one side\n    padding: $padding;\n\n    // Axis specific values to apply to two sides\n    padding-block: $block;\n    padding-inline: $inline;\n\n    // Side specific values to overwrite any general or axis values\n    padding-block-end: $blockEnd;\n    padding-block-start: $blockStart;\n    padding-inline-end: $inlineEnd;\n    padding-inline-start: $inlineStart;\n\n    // General scroll values that apply to more than one side\n    scroll-padding: $scroll;\n\n    // Axis specific values to apply to two sides\n    scroll-padding-block: $scrollBlock;\n    scroll-padding-inline: $scrollInline;\n\n    // Side specific scroll values to overwrite any general or axis values\n    scroll-padding-block-end: $scrollBlockEnd;\n    scroll-padding-block-start: $scrollBlockStart;\n    scroll-padding-inline-end: $scrollInlineEnd;\n    scroll-padding-inline-start: $scrollInlineStart;\n\n    @supports not (padding-block-end: 1rem) {\n        // Side-specific fallbacks or axis-specific fallbacks\n        padding-bottom: $blockEnd or list.nth($block, -1);\n        padding-left: $inlineStart or list.nth($inline, 1);\n        padding-right: $inlineEnd or list.nth($inline, -1);\n        padding-top: $blockStart or list.nth($block, 1);\n    }\n\n    @supports not (scroll-padding-block: 1rem) {\n        // Side-specific fallbacks or axis-specific fallbacks\n        scroll-padding-bottom: $scrollBlockEnd or list.nth($scrollBlock, -1);\n        scroll-padding-left: $scrollInlineStart or list.nth($scrollInline, 1);\n        scroll-padding-right: $scrollInlineEnd or list.nth($scrollInline, -1);\n        scroll-padding-top: $scrollBlockStart or list.nth($scrollBlock, 1);\n    }\n}\n","code[class*='language-'],\npre[class*='language-'] {\n    @include layout($textAlign: start);\n\n    color: var(--o-color-aux-100);\n    direction: ltr;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n\n    -moz-tab-size: 4;\n    -o-tab-size: 4;\n    tab-size: 4;\n\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n\n    font-family: var(--o-font-mono);\n    line-height: 1.5;\n    letter-spacing: 0.5px;\n}\n\npre[class*='language-'] {\n    overflow: auto;\n}\n\n.token.comment,\n.token.prolog,\n.token.cdata {\n    color: var(--o-color-aux-300);\n}\n\n.token.delimiter,\n.token.keyword,\n.token.selector,\n.token.important,\n.token.atrule {\n    color: var(--o-color-primary);\n}\n\n.token.operator,\n.token.attr-name {\n    color: var(--o-color-primary);\n}\n\n.token.punctuation,\n.token.boolean {\n    color: var(--o-color-aux-100);\n}\n\n.token.tag,\n.token.tag .punctuation,\n.token.doctype,\n.token.builtin {\n    color: var(--o-color-primary);\n}\n\n.token.entity,\n.token.symbol,\n.token.number,\n.token.property,\n.token.constant,\n.token.variable {\n    color: var(--o-color-aux-200);\n}\n\n.token.string,\n.token.char,\n.token.attr-value,\n.token.attr-value .punctuation {\n    color: var(--o-color-aux-200);\n}\n\n.token.attr-value .punctuation:first-child {\n    color: var(--o-color-aux-200);\n}\n\n.token.url {\n    color: var(--o-color-secondary);\n    text-decoration: underline;\n}\n\n.token.function {\n    color: var(--o-color-primary);\n}\n\ncode.language-css .token.property,\ncode.language-css .token.property + .token.punctuation {\n    color: var(--o-color-secondary);\n}\n\ncode.language-css .token.id {\n    color: var(--o-color-primary);\n}\n\ncode.language-css .token.selector > .token.class,\ncode.language-css .token.selector > .token.attribute,\ncode.language-css .token.selector > .token.pseudo-class,\ncode.language-css .token.selector > .token.pseudo-element {\n    color: var(--o-color-primary);\n}\n\n.token.class-name {\n    color: var(--o-color-primary);\n}\n"]}